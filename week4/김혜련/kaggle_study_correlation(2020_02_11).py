# -*- coding: utf-8 -*-
"""KAGGLE Study_Correlation(2020.02.11)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rFzKSkyFSJxujTVK5Wcv-Y75YrDnQDe4

#(2020.02.11/화) KAGGLE SANBON STUDY_3
---

### SUBJECT : 상관관계 및 상관계수


---

# 상관관계란?
> 두 변수간에 어떤 선형적 관계를 갖고 있는지 분석하는 방법 

> 두 변수간의 관계의 강도 => 상관관계

> 그 정도를 파악하는 것 => 상관계수  

  




# WHY? 데이터분석에서 왜 '상관계수'가 필요할까?

> 두 변수간의 관계를 보여주는 보조적 수치

> 두 변수간의 선형관계의 방향, 강도를 측정하는 지표 


> 두 변수간의 관계를 알아보는데 있어,

 1) x, y의 평균,

 2) x, y의 표준편차,

**3) x, y간 상관계수(correlation coefficient, r)**
  
<br>
<br>  
  
> 범위 : -1 ≤ r ≤ 1

> 상관계수 = 1 또는 -1 이면 완전상관(perfect correlation)  

> 두 변수의 표준편차가 모두 0이면 상관계수를 정의할 수 없음

> 두 변수 중 어느 한 변수만의 표준편차가 0이면 상관계수는 0

> 기본적으로 '피어슨 상관계수'를 사용함

: r = x와 y가 함께 변하는 정도 / x와 y가 각각 변하는 정도 

Q. 공분산이란? 왜 분모으로서 나눌까? 왜 하필 공분산일까?
"""

from IPython.display import Image
Image('r.PNG')

"""# 새 섹션

# [상관계수의 특징] 

> '단위'를 갖지 않음 -> 측정단위와 독립적으로 정의 

: 상수를 + or - and 양의 상수 * or 

> 방향성을 갖지 않음 -> x와 y의 상관계수 ->  y와 x의 상관계수와 같음 



# Python 에서의 상관분석

> pandas에서 제공하는 함수를 통해 가능

: list를 DataFrame으로 변환한 뒤 corr 메소드를 실행하면 됨 ! 

> 상관분석 시각화는 데이터 시각화 라이브러리인 matplotlib, 

> 통계 데이터 시각화에 최적화된 라이브러리인 seaborn 사용
"""

import pandas as pd 

# Pandas의 피어슨 상관관계 분석 

list = [[1,2,3,4,5,6,7],
        [10,15,20,25,50,55,60],
        [2,3,4,5,6,7,0],
        [-1, -20, -30, -45, -50, -55, -70]]


df = pd.DataFrame(list).T # T ? Transpose index and columns.
corr = df.corr(method = 'pearson')
print(corr)



# 데이터 상관관계 시각화 - 히트맵

import matplotlib.pyplot as plt
import seaborn as sns


plt.figure(figsize=(4,4))
df_heatmap = sns.heatmap(corr, cbar = True, annot = True, annot_kws = {'size' :10},
                         fmt = '.2f', square = False, cmap = 'Purples')

"""# 상관계수의 의미

> 상관계수 0.8의 의미는? 

> 상관계수 0.8과 0.4는 두배로 강하다는 것?

> 두 변수간의 연관된 정도를 나타낼 뿐, 인과관계를 설명하는 것은 아님 

: 인과관계는 회귀분석을 통해 인과관계의 방향, 정도, 수학적 모델을 확인해볼 수 있음

> 두 그림의 상관관계는 어떻게 다를까?
"""

from IPython.display import Image
Image('r2.PNG')



"""# 상관계수가 유용하지 않은 경우?

> 이탈값(outlier)이 존재하는 경우

> 두 변수간 관계가 비선형인 경우

: 자료 형태를 보아 선형관계인지 확인 필요 !
"""

from IPython.display import Image
Image('r3.PNG')

"""# 변수 변환을 위해 로그 변환이 왜 필요할까? 데이터 분석 시, 식에 로그를 취하는 이유

> 로그(log) 수학 함수의 일종, Logarithm의 약자 

> log의 역할 : 큰 수를 같은 비율의 작은 수로 바꿔주는 것

: 로그를 취하는 순간, 그 수는 지수가 되어버린다. 100에 상용로그(10진법)를 취한다면? 

: 100 = 10² => 2가 됨 

>  정규성을 높이고(데이터간 편차를 줄여 왜도와 첨도를 줄일 수 있음

: EX) 나이의 범위 VS 재산보유액의 차이 

> 분석(회귀분석 등)에서 정확한 값을 얻기 위해 -
"""

import math

# 자연 로그 함수 (수학 이론 연구 ln(LN의 소문자)))
# 밑이 e (오일러 상수: 약 2.718) 인 로그를 자연로그(자연대수: Natural Logarithm)라고 합니다. 
print(math.log(12))
print(math.log(12.0))


# 상용 로그 함수 (보편적, log, Log, Log10 등) 
# 밑(Base)이 10 인 로그를 상용로그(상용대수: Common Logarithm)
print(math.log10(12))
print(math.log10(12.0))